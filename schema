-- Create database
CREATE DATABASE store_rating_platform;

-- Use the database
\c store_rating_platform;

-- Create users table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(60) NOT NULL CHECK (LENGTH(name) >= 20 AND LENGTH(name) <= 60),
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    address VARCHAR(400),
    role VARCHAR(20) NOT NULL CHECK (role IN ('admin', 'user', 'store_owner')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create stores table
CREATE TABLE stores (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    address VARCHAR(400),
    owner_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create ratings table
CREATE TABLE ratings (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    store_id INTEGER REFERENCES stores(id) ON DELETE CASCADE,
    rating INTEGER NOT NULL CHECK (rating >= 1 AND rating <= 5),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(user_id, store_id)
);

-- Create indexes for better performance
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_role ON users(role);
CREATE INDEX idx_stores_email ON stores(email);
CREATE INDEX idx_ratings_user_id ON ratings(user_id);
CREATE INDEX idx_ratings_store_id ON ratings(store_id);

-- Create a view for store ratings summary
CREATE VIEW store_ratings_summary AS
SELECT 
    s.id,
    s.name,
    s.email,
    s.address,
    s.owner_id,
    COALESCE(AVG(r.rating), 0) as average_rating,
    COUNT(r.rating) as total_ratings
FROM stores s
LEFT JOIN ratings r ON s.id = r.store_id
GROUP BY s.id, s.name, s.email, s.address, s.owner_id;

-- Insert default admin user (password: Admin123!)
INSERT INTO users (name, email, password, address, role) VALUES 
('System Administrator User', 'admin@platform.com', '$2b$10$8K8mJ9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K', '123 Admin Street, Admin City', 'admin');

-- Insert sample store owners
INSERT INTO users (name, email, password, address, role) VALUES 
('Sample Store Owner Number One', 'store1@example.com', '$2b$10$8K8mJ9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K', '456 Store Avenue, Store City', 'store_owner'),
('Another Sample Store Owner Two', 'store2@example.com', '$2b$10$8K8mJ9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K', '789 Commerce Street, Business District', 'store_owner');

-- Insert sample stores
INSERT INTO stores (name, email, address, owner_id) VALUES 
('Amazing Electronics Store', 'store1@example.com', '456 Store Avenue, Store City', 2),
('Best Grocery Market Place', 'store2@example.com', '789 Commerce Street, Business District', 3);

-- Insert sample normal user
INSERT INTO users (name, email, password, address, role) VALUES 
('Sample Normal User Account', 'user@example.com', '$2b$10$8K8mJ9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K9K', '321 User Lane, User City', 'user');

-- Insert sample ratings
INSERT INTO ratings (user_id, store_id, rating) VALUES 
(4, 1, 4),
(4, 2, 5);